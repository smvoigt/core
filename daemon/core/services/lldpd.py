#
#
''' lldpd service.
'''

import os

from core.service import CoreService, addservice
from core.misc.ipaddr import IPv4Prefix, IPv6Prefix

class LLDPDService(CoreService):
    ''' This is a sample user-defined service. 
    '''
    # a unique name is required, without spaces
    _name = "lldpd"
    # you can create your own group here
    _group = "Routing"
    # list of other services this service depends on
    _depends = ()
    # per-node directories
    _dirs = ()
    # generated files (without a full path this file goes in the node's dir,
    #  e.g. /tmp/pycore.12345/n1.conf/)
    _configs = ('lldpd.sh', )
    # this controls the starting order vs other enabled services
    _startindex = 30
    # list of startup commands, also may be generated during startup
    _startup = ("sh lldpd.sh",)
    # list of shutdown commands
    _shutdown = ("killall lldpd", )

    _validate = ("pidof lldpd", )

    @classmethod
    def generateconfig(cls, node, filename, services):
        ''' Return a string that will be written to filename, or sent to the
            GUI for user customization.
        '''
        cfg = "#!/bin/sh\n"
        cfg += "# auto-generated by LLDPDService (lldpd.py)\n"
        cfg += "#\n"
        cfg += "# Uncomment the appropriate lldpd command\n"
        cfg += "#\n"
        cfg += "# to enable CDP and disable LLDP uncomment the following line\n"
        cfg += "lldpd -ccc -ll\n"
        cfg += "#\n"
        cfg += "# to enable LLDP and use CDP for Cisco devices uncomment the following line\n"
        cfg += "# lldpd -c -l\n"

        return cfg

# this line is required to add the above class to the list of available services
addservice(LLDPDService)

